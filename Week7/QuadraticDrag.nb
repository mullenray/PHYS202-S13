(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    104871,       2165]
NotebookOptionsPosition[    102917,       2104]
NotebookOutlinePosition[    103253,       2119]
CellTagsIndexPosition[    103210,       2116]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Gravity", " ", "constant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", " ", "=", " ", "0.5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Length", " ", "of", " ", "the", " ", "pendulum"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]0", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"20", " ", "\[Times]", " ", "\[Pi]"}], ")"}], " ", "/", " ", 
     "180"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"20", " ", "degreen", " ", "in", " ", "radians"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]0", " ", "=", " ", "0"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Starting", " ", "from", " ", "rest"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ode1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{"(", 
         RowBox[{"g", "/", "l"}], ")"}]}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "0", "]"}], " ", "\[Equal]", " ", 
      "\[Theta]0"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "\[Omega]0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"ode1", ",", " ", "\[Theta]", ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myplot1", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"180", "/", "\[Pi]"}], ")"}], " ", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}], " ", "/.", " ", "sol"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omega", " ", "=", " ", 
   SqrtBox[
    RowBox[{"(", 
     RowBox[{"g", "/", "l"}], ")"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approx", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"180", " ", "/", " ", "\[Pi]"}], ")"}], " ", "\[Theta]0", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega", " ", "*", " ", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myplot2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"approx", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsfun"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\(5\\\\ \[Pi]\\)\\/18\\)\[NoBreak] cannot be \
used as a function. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsfun\\\", ButtonNote -> \
\\\"NDSolve::dsfun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742462785*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742471767*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.0004085714285714286`]\\)\\) \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(\\(5\\\\ \
\[Pi]\\)\\/18\\)\\)[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\(5\\\\ \[Pi]\\)\\/18\\)\\)[0]\\)\\) \[Equal] \[Pi]\\/9\\)\
\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] 0\\)\\)}\
\\)\\), \\(5\\\\ \[Pi]\\)\\/18, \\(\\({0.0004085714285714286`, 0, \
20}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.5783607424802094`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742489669*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0 \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742498043*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742506959*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.5783607425156803`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0.` \
\[Equal] \\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742524394*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.578360718410556*^9, 3.578360742533476*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"myplot1", ",", " ", "myplot2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.577733067798736*^9, 3.577733069381074*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPbcuic0wZbYdAxQsPDW/8LX8TXsYf936zts5eq/g
/HT7izPfFH2G8/Oeaj7esu4nnM+l2KJ+34LBAcbvEzittTCBGc5Puh2yn/kM
G5xfeLQlKV+dC87fWMATLOHJC+cvrM5+ZRAuAOc3zf8T+OWNIJzPcPmBw54q
YThfrSStIkRLFM5/8nV6GPdeMTjf62lW7aRCCTjf78kEbTk5KTj/1eGkhhNr
peF8PcFrss7xsnA+l/3XxDuf5eB897dR35VCFeD8G4dSGKN0FOH8rR1H4hS+
IvhprKUPzp1TgvOTi6q38sxShvP107XP+SSqwPnnhXS4Sy1V4fzd65pm6zCr
wfnVjFoBZ+4i+Fx3qjzytqjD+U+XKU6ZX6MB50/RkGTZGaoJ50+YlXY8UUEL
zo+aEnuO5zmC/8Nl6c/5+7Th/MdPnSoOtevA+YtsDaXPJurC+WtbSwXTdfXg
/PbQZG/mrwi+6Z2FK9vP6sP5MzRnrz3rbQDn1x/oneG9E8H3lQ5dekrFEM53
zDseLdiJ4M+XSVI58xXBVzm8fJpftBHCf7qHtC7tQ/DTPrNcPKllDOcnbfyk
0NmP4O/7rPbz/38EHwAZIawZ
    "], {}], {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
YvuWMF+yZUko/cUY+/de8ImsSK3JEgL+B71mw0Y=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.577733070085824*^9, 3.5783607322834272`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";", " ", 
    RowBox[{"l", " ", "=", " ", "0.5"}], ";", " ", 
    RowBox[{"omega", " ", "=", " ", 
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"g", "/", "l"}], ")"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Equal]", 
             " ", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"g", "/", "l"}], ")"}]}], " ", "*", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", " ", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "0", "]"}], " ", "\[Equal]", " ", 
             "\[Theta]0"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], " ", "\[Equal]", 
             " ", "\[Omega]0"}]}], "}"}], ",", " ", "\[Theta]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}]}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"180", " ", "/", " ", "\[Pi]"}], ")"}], " ", "\[Theta]0", 
           " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"omega", " ", "*", " ", "t"}], "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"180", "/", "\[Pi]"}], ")"}], " ", "*", " ", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], " ", "/.", " ", 
           "result"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
        RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Blue", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", " ", "Red"}], "}"}]}], "}"}]}], ",", "  ", 
        
        RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
        RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<t (s)\>\"", ",", " ", "\"\<\[Theta] (rad)\>\""}], 
          "}"}]}], ",", " ", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "20"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{"ImageSize", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"500", ",", " ", "300"}], "}"}]}]}], "]"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", " ", "0.5", ",", " ", "\"\<Length (m)\>\""}], "}"}], 
     ",", " ", "0", ",", " ", "2", ",", " ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]0", ",", " ", 
       RowBox[{"20", " ", "*", " ", 
        RowBox[{"\[Pi]", "/", "180"}]}], ",", " ", 
       "\"\<Initial Angle (rad)\>\""}], "}"}], ",", " ", "0.1", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Omega]0", ",", " ", "0", ",", " ", "\"\<Initial Speed (rad/s)\>\""}],
       "}"}], ",", " ", "0", ",", " ", "10.0", ",", " ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.578445557663755*^9, 3.5784455727792683`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
    Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`l$$], 0.5, "Length (m)"}, 0, 2}, {{
       Hold[$CellContext`\[Theta]0$$], Rational[1, 9] Pi, 
       "Initial Angle (rad)"}, 0.1, Rational[1, 2] Pi}, {{
       Hold[$CellContext`\[Omega]0$$], 0, "Initial Speed (rad/s)"}, 0, 10.}}, 
    Typeset`size$$ = {500., {148., 152.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`l$3551$$ =
     0, $CellContext`\[Theta]0$3552$$ = 0, $CellContext`\[Omega]0$3553$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`l$$ = 0.5, $CellContext`\[Theta]0$$ = 
        Rational[1, 9] Pi, $CellContext`\[Omega]0$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`l$$, $CellContext`l$3551$$, 0], 
        Hold[$CellContext`\[Theta]0$$, $CellContext`\[Theta]0$3552$$, 0], 
        Hold[$CellContext`\[Omega]0$$, $CellContext`\[Omega]0$3553$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`g = 9.8; $CellContext`l$$ = 
        0.5; $CellContext`omega = ($CellContext`g/$CellContext`l$$)^
         Rational[1, 2]; 
       Module[{$CellContext`result$ = 
          NDSolve[{
            Derivative[
              2][$CellContext`\[Theta]][$CellContext`t] == \
(-($CellContext`g/$CellContext`l$$)) Sin[
                $CellContext`\[Theta][$CellContext`t]], $CellContext`\[Theta][
              0] == $CellContext`\[Theta]0$$, 
             Derivative[1][$CellContext`\[Theta]][
              0] == $CellContext`\[Omega]0$$}, $CellContext`\[Theta], \
{$CellContext`t, 0, 20}]}, 
         Plot[{(180/Pi) $CellContext`\[Theta]0$$ 
           Cos[$CellContext`omega $CellContext`t], 
           
           ReplaceAll[(180/
             Pi) $CellContext`\[Theta][$CellContext`t], \
$CellContext`result$]}, {$CellContext`t, 0, 20}, 
          PlotStyle -> {{Blue}, {Dashed, Red}}, PlotRange -> All, 
          AxesLabel -> {"t (s)", "\[Theta] (rad)"}, 
          PlotRange -> {{0, 20}, {-20, 20}}, ImageSize -> {500, 300}]]), 
      "Specifications" :> {{{$CellContext`l$$, 0.5, "Length (m)"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]0$$, Rational[1, 9] Pi, 
          "Initial Angle (rad)"}, 0.1, Rational[1, 2] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`\[Omega]0$$, 0, "Initial Speed (rad/s)"}, 
         0, 10., Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{545., {219., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.577733084997151*^9, 3.578360736600253*^9, {3.5784455587267933`*^9, 
   3.578445574068046*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsfun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\(5\\\\ \[Pi]\\)\\/18\\)\[NoBreak] cannot \
be used as a function. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsfun\\\", ButtonNote -> \
\\\"NDSolve::dsfun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574557379*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574576949*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\[Prime]\[Prime]\\\", \
Rule[MultilineFunction, None]]\\)\\)[0.0004085714285714286`]\\)\\) \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \\(\\(Sin[\\(\\(\\(\\(\\(5\\\\ \
\[Pi]\\)\\/18\\)\\)[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\(5\\\\ \[Pi]\\)\\/18\\)\\)[0]\\)\\) \[Equal] \[Pi]\\/9\\)\
\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\((\\(5\\\\ \[Pi]\\)\\/18)\\), \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]]\\)\\)[0]\\)\\) \[Equal] 0\\)\\)}\
\\)\\), \\(5\\\\ \[Pi]\\)\\/18, \\(\\({0.0004085714285714286`, 0, \
20}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574589148*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574598549*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0 \[Equal] \
\\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784455746868*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(0.0004085714285714286`\\)\[NoBreak] cannot \
be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dsvar\\\", ButtonNote -> \
\\\"NDSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574696333*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574705132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(0.` \
\[Equal] \\(\\(\\(\\(-19.6`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(0.8726646259971648`[0.0004085714285714286`]\\)\\)]\\)\\)\\)\\)\
\\)\\), \\(\\(\\(\\(0.8726646259971648`[0.`]\\)\\) \[Equal] \
0.3490658503988659`\\)\\), True}\\)\\), 0.8726646259971648`, \
\\(\\({0.0004085714285714286`, 0.`, 20.`}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.578445574714776*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5784455747251596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "g"}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
        RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"-", "g"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
          RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"V", "  ", "=", " ", "30"}], "\[IndentingNewLine]", 
   RowBox[{"\[Theta]", "  ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"50", " ", "\[Times]", " ", "\[Pi]"}], ")"}], " ", "/", " ", 
     "180"}]}], "\[IndentingNewLine]", 
   RowBox[{"c", " ", "=", " ", 
    RowBox[{"3", " ", 
     RowBox[{"10", "^", "8"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"g", " ", "=", " ", "9.8"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"vt", " ", "=", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", " ", "g"}], ")"}], "/", "c"}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"vt", " ", "=", " ", "135"}], "\[IndentingNewLine]", 
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "g"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"-", "g"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
               RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}],
            ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
         RowBox[{"V", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
         RowBox[{"V", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "200"}], "}"}]}], " ", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.57773334122831*^9, 3.5777334598331127`*^9}, {
  3.5777335241581373`*^9, 3.577733738111052*^9}, {3.577733773952322*^9, 
  3.577733803290999*^9}, {3.577733872675832*^9, 3.577733910672723*^9}, {
  3.577734034708907*^9, 3.577734046258375*^9}, {3.5783603733495207`*^9, 
  3.578360402793297*^9}, {3.5783604659744368`*^9, 3.5783604951105556`*^9}, {
  3.578360619585637*^9, 3.5783606206545067`*^9}, {3.578442074326252*^9, 
  3.578442121585537*^9}, {3.578443021340951*^9, 3.578443022326263*^9}}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.578443023155548*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", "\[Pi]"}], "18"]], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.578443023163993*^9}],

Cell[BoxData["300000000"], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.578443023174862*^9}],

Cell[BoxData["9.8`"], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.5784430231862307`*^9}],

Cell[BoxData["135"], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.5784430231971397`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5777338083132467`*^9, {3.5777338804990387`*^9, 3.57773391122287*^9}, {
   3.57773403597957*^9, 3.577734047681469*^9}, 3.578360408859335*^9, 
   3.578360621358993*^9, 3.578442087347556*^9, 3.578443023208858*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.578360470267908*^9, 3.5783604980796423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.578441787288199*^9, 3.578441795777884*^9}, {
  3.578441836870895*^9, 3.57844192213736*^9}, {3.578442141007574*^9, 
  3.5784421754525013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
N3a94drOkwqjkLJ9OI2w1CEBBaQ7CluaJR/7YKsNeqQbeY6CWgBzHeEzktcC
b3mPQsHsWBdhxQcupm2+o/Ba9ugCYbsr9tyS5FEgGf0R8sXmXjBNZ4oYBbpI
1kzCtlvU09sejMLUCE2oH3aFFG+6ZN0osFRm3ibsk8gV6Fg/Cn20YumEj/7h
MM1uHIUPGqw1hCOa9nIzt4xCyd2DS4TfqzOkf+wZBQaacxf8ifqZ/UrLfj0K
26T52AKI8zm2J42Zhgpr1dv4CdsUlTnwbaFC4djMEcLs3Yknj9FRIVTUT5Hw
ja3Wg/rbqVBWtNOFsF/o+pYHu6ngz7TaRJjfT8yJi58KzkKnTEnYvldvy4oo
UQElldsSngzyppdToQKLNs81wmfSTSgaalRgejoaSpj25SEXZ00q9D9uyyd8
x+BFVqkBFY63Vn4hvKbybetJayp4DPD6kbFnhQyoihFUGHpLF0I4jU5P+noU
FZz+vosmbDijk9QQTYWABz6phPuzNS7L3KKCUTVfI+GfXIpvxBKpMH+STBOI
Xbj32Cx7IRV48gquE/7KwLz8uZcKFefVbxAO/LjT6MgAFZ4kvbtNmKmbocZh
iAot4j8yCMtF0wfMjFKhrrywnnD31o2/E2+o0LBgs0z4Ld0SXdtXnP9vW6sg
bDrann2pe8fgVEuIA2HvzDKrctYxWLqZ4EZ4Si6prIt9DNCxAhLhMncb7d9c
Y+BYG3CPMO/bzXDDg2OgnfAK/udaqZ/MJ8fguyNwBBPnoVPGcLjRGCTVM/AS
TqSP4Eu7NAZaa9qChDuynVwrTMag0aRZnPDRcRmGKfMxUHe0UiK8X4WCztiP
wbeyWCfC+rzbylb9xmD31sfVhDlG3G+7poxB6nehesKmY+eNSGljYDOY8YJw
5sujvDcyxoDsH9xFmOf9Ukl2Ds6Hl+4VYdrPDv0jj8eg6Z7QX8KkrZaM8s/H
YENuTuE6UW9Z/Zitk2NQMt+LCF8/dcxg75sxoEiUqBAOOrOL88C7MTiRa6VN
2Fml/7HczBjMZ6VcIbxLT6PbZXEMkqUUAgg/sFPcPrKOx7P7lBPOuHc8Kot7
HAr6DjwjLGUkMj3BOw5ntnXVEh7Yz3dmD/84qAkwAGGWHMaVCKFxeBdjNED4
zdN5W6ej49D0XuATYRjIUD2JxkH3Yh5vCPbn3Tvoe63HoZray0/4IJXGks5u
HOYDvxwkbJ7yu+G0wzjEGIgcITzOP+td5jIO1Aw3GcKLkvDhgc84eNdonCdc
fdG3zeLGOJQOXwokfCpjOnylaBwCKt4GE9bmaeljKBmHDxWWoYTNMnJYeZ6O
Qxbf1SjCgRkWBcqV48BGKxtPuDDjbU98/TjY19nkEo7JeMVypG8cqlxedBLO
SaVkXf08Dsrnv3YTvsBZseD5dRxkKrn7CNOn3j0e9X0cGna4DxG2TNFrLV4e
Bwn1PxOEdyQPzP3ZGIfrFckfCb960COewDwBi328DKFEvz1oqe+SmACbIoWd
hNV/tAzsl5wAa6oxE+Gr51unnE5MwCRfFAvhEIa2bUxyE5D8qmU/4etB7Rf0
lSbgTeaLw4R32HQtvjScAFHat+cIPxMf4FoMmADPlicahI/HDBxVCJyARyf8
tAgXzQ0o3gqegPnT284Tvps1aC8RPgFfZBmNCCuxDFd6xU1AuU+xNeHiXyNa
fzMnYKnfyJawsP6ouU7OBLzd/s+O8KOSUY/MXLy+pIYT4RI7ahIqnIALWW3u
hGlejs1ElE+AuYm5J+GHJ8dXqJUT8IRpxYuw5r1xBuHqCfhqx+dH+LHWhET3
8wmoYSn3/189CieUOBsnwLIJkQiz07+86PxiAiSuDZAJD1u+dGhongDDQyZB
hG81vSQztU3A/wH0BMX+
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 100}, {0, 60}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.57844303140063*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"g", " ", "=", " ", "9.8"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "g"}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
                RowBox[{"vt", "^", "2"}]}]}], ")"}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}],
            ",", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "g"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
                  RowBox[{"vt", "^", "2"}]}], ")"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], 
                 "]"}]}]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"v0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"v0", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", " ", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"v0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"h0", "+", 
             RowBox[{"v0", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "t"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "2"}], ")"}], " ", "g", " ", 
              RowBox[{"t", "^", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Evaluate", "[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "[", "t", "]"}], ",", 
                RowBox[{"y", "[", "t", "]"}]}], " ", "}"}], "/.", "result"}], 
             "]"}], " ", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], " ", "}"}]}], " ", 
        "}"}], ",", 
       RowBox[{"ImageSize", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"500", ",", "300"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<x (m)\>\"", ",", "\"\<y (m)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Blue", "}"}], ",", 
          RowBox[{"{", "Red", "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v0", ",", "30", ",", "\"\<Initial Velocity (m/s)\>\""}], "}"}],
      ",", "0", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"50", "*", 
        RowBox[{"\[Pi]", "/", "180"}]}], ",", "\"\<Launch Angle (rad)\>\""}], 
      "}"}], ",", "0.01", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vt", ",", "135", ",", "\"\<Terminal Velocity (m/s)\>\""}], 
      "}"}], ",", "0.5", ",", "150.0", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h0", ",", " ", "0", ",", "\"\<Launch Height (m)\>\""}], "}"}], 
     ",", "0", ",", "2", ",", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01", ",", "\"\<Time (s)\>\""}], "}"}], ",", "0", 
     ",", "200", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.578442449574519*^9, 3.578442482921042*^9}, 
   3.578442518541277*^9, {3.57844258036423*^9, 3.578442598729909*^9}, {
   3.578442630626233*^9, 3.578442649183743*^9}, {3.578442685084202*^9, 
   3.578442694395237*^9}, {3.578442778802167*^9, 3.578442886328023*^9}, {
   3.578443130614853*^9, 3.578443193644548*^9}, {3.5784432610634403`*^9, 
   3.5784433824757853`*^9}, {3.5784434152828836`*^9, 3.57844342535233*^9}, {
   3.57844349235334*^9, 3.578443526663142*^9}, {3.578443559333139*^9, 
   3.578443599360396*^9}, {3.578443695403363*^9, 3.578443884019619*^9}, {
   3.578443958958136*^9, 3.578443992414526*^9}, {3.578444142109839*^9, 
   3.578444145588204*^9}, {3.578444180458335*^9, 3.5784442284844217`*^9}, {
   3.578444413790324*^9, 3.578444430767787*^9}, {3.578444553984405*^9, 
   3.578444557953279*^9}, {3.578444709080193*^9, 3.578444715936309*^9}, {
   3.57844496056677*^9, 3.578445043617947*^9}, {3.578445078097661*^9, 
   3.578445109762694*^9}, {3.578445141806734*^9, 3.578445154455933*^9}, {
   3.57844526288428*^9, 3.57844535986618*^9}, {3.578445458719862*^9, 
   3.5784454652021513`*^9}, {3.578445522031248*^9, 3.57844552269319*^9}, {
   3.578445608198986*^9, 3.578445626088789*^9}, {3.578445838135306*^9, 
   3.5784458383611526`*^9}, {3.5784459003395367`*^9, 3.5784460747744913`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Manipulate", "::", "vsform"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Manipulate argument \
\[NoBreak]\\!\\(Module[\\(\\(\\(\\({result = \
\\(\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\), TagBox[\\((\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\))\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\) \[Equal] \
\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\(\[LeftSkeleton] 1 \[RightSkeleton]\\), \
TagBox[\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\\))\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[Equal] \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\), \\(\\(\\(\\(x[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\) \[Equal] 0.`\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\(\[LeftSkeleton] 1 \[RightSkeleton]\\), \
TagBox[\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\\))\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[Equal] \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\), \\(\\(\\(\\(y[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\) \[Equal] 2\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\(\[LeftSkeleton] 1 \[RightSkeleton]\\), \
TagBox[\\((\\(\[LeftSkeleton] 1 \[RightSkeleton]\\))\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[Equal] \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)}\\)\\), \\(\\({x, y}\\)\\), \\(\\({t, 0, \
200}\\)\\)\\)\\)]\\)\\)}\\)\\), \
\\(\\(ParametricPlot[\\(\\(\\(\\({\\(\\({\\(\\({v0\\\\ \\(\\(Cos[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)\\\\ t}\\)\\), \\(\\({h0 + \\(\
\\(Times[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\
\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)}\\)\\), \\(\\({t, 0, \
200}\\)\\)}\\)\\), \\(\\({\\(\\({\\(Evaluate[\\(\\(ReplaceAll[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)]\\)}\\)\\), \\(\\({t, 0, 200}\
\\)\\)}\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak] does not \
have the correct form for a variable specification. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Manipulate\\\", ButtonNote -> \
\\\"Manipulate::vsform\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.578443427100974*^9, {3.578443593556897*^9, 3.578443604114118*^9}, 
   3.578443700466563*^9, 3.578443743963829*^9, 3.5784438134182158`*^9, 
   3.5784438924681177`*^9, 3.578443959934628*^9, 3.57844399472182*^9, 
   3.578444152353549*^9, 3.57844423008628*^9, 3.578444437228363*^9, 
   3.578444690487268*^9, 3.578444721556122*^9, 3.578445004622661*^9, 
   3.578445036281692*^9, 3.578445178673897*^9, {3.578445339081347*^9, 
   3.578445363258359*^9}, 3.578445466505433*^9, 3.5784455232875223`*^9, {
   3.578445613880311*^9, 3.578445634033819*^9}, 3.578445839084261*^9, 
   3.5784459053878927`*^9, 3.578445948294437*^9, {3.578445997457898*^9, 
   3.5784460211796923`*^9}, 3.578446085573957*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"g", "=", "9.8`"}], ",", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"g", " ", 
                 RowBox[{
                  SuperscriptBox["x", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], ")"}], " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], 
              SuperscriptBox["vt", "2"]]}]}], ",", 
           RowBox[{
            RowBox[{
             SuperscriptBox["y", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "g"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], " ", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], 
                SuperscriptBox["vt", "2"]]}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.`"}], ",", 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"v0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "0", "]"}], "\[Equal]", 
            RowBox[{"v0", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"v0", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"h0", "+", 
             RowBox[{"v0", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "t"}], "-", 
             FractionBox[
              RowBox[{"g", " ", 
               SuperscriptBox["t", "2"]}], "2"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "[", "t", "]"}], ",", 
                RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", 
              "\[VeryThinSpace]", "result"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"500", ",", "300"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\<\"x (m)\"\>", ",", "\<\"y (m)\"\>"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Blue", "}"}], ",", 
          RowBox[{"{", "Red", "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v0", ",", "30", ",", "\<\"Initial Velocity (m/s)\"\>"}], "}"}],
      ",", "0", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\<\"Labeled\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       FractionBox[
        RowBox[{"50", " ", "\[Pi]"}], "180"], 
       ",", "\<\"Launch Angle (rad)\"\>"}], "}"}], ",", "0.01`", ",", 
     FractionBox["\[Pi]", "2"], ",", 
     RowBox[{"Appearance", "\[Rule]", "\<\"Labeled\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vt", ",", "135", ",", "\<\"Terminal Velocity (m/s)\"\>"}], 
      "}"}], ",", "0.5`", ",", "150.`", ",", 
     RowBox[{"Appearance", "\[Rule]", "\<\"Labeled\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h0", ",", "0", ",", "\<\"Launch Height (m)\"\>"}], "}"}], ",", 
     "0", ",", "2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\<\"Labeled\"\>"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01`", ",", "\<\"Time (s)\"\>"}], "}"}], ",", "0", 
     ",", "200", ",", 
     RowBox[{"Appearance", "\[Rule]", "\<\"Labeled\"\>"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.57844338489181*^9, 3.578443426722733*^9, {3.578443593600309*^9, 
   3.578443604155223*^9}, 3.578443700504612*^9, 3.578443744001359*^9, 
   3.5784438134301453`*^9, 3.578443892481344*^9, 3.57844395994715*^9, 
   3.578443994734189*^9, 3.5784441523659563`*^9, 3.578444230099235*^9, 
   3.5784444372437077`*^9, 3.5784446905037327`*^9, 3.5784447215688143`*^9, 
   3.578445004634338*^9, 3.5784450363038054`*^9, 3.578445178685752*^9, {
   3.578445339093541*^9, 3.578445363272243*^9}, 3.5784454665190363`*^9, 
   3.5784455233003397`*^9, {3.5784456138928556`*^9, 3.578445634045938*^9}, 
   3.578445839099226*^9, 3.57844590540012*^9, 3.578445948306821*^9, {
   3.578445997488751*^9, 3.578446021192411*^9}, 3.578446085586068*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.578446100155159*^9, 3.578446101146393*^9}}]
},
WindowSize->{793, 755},
WindowMargins->{{Automatic, -38}, {Automatic, 0}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 3383, 97, 331, "Input"],
Cell[3965, 121, 477, 9, 49, "Message"],
Cell[4445, 132, 490, 10, 24, "Message"],
Cell[4938, 144, 1212, 20, 126, "Message"],
Cell[6153, 166, 490, 10, 24, "Message"],
Cell[6646, 178, 888, 16, 79, "Message"],
Cell[7537, 196, 490, 10, 24, "Message"],
Cell[8030, 208, 557, 11, 24, "Message"],
Cell[8590, 221, 890, 16, 79, "Message"],
Cell[9483, 239, 557, 11, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10077, 255, 187, 4, 30, "Input"],
Cell[10267, 261, 40445, 668, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50749, 934, 4139, 106, 263, "Input"],
Cell[54891, 1042, 3514, 69, 460, "Output"],
Cell[58408, 1113, 466, 10, 49, "Message"],
Cell[58877, 1125, 466, 10, 24, "Message"],
Cell[59346, 1137, 1186, 20, 126, "Message"],
Cell[60535, 1159, 466, 10, 24, "Message"],
Cell[61004, 1171, 862, 16, 79, "Message"],
Cell[61869, 1189, 466, 10, 24, "Message"],
Cell[62338, 1201, 531, 11, 24, "Message"],
Cell[62872, 1214, 866, 16, 79, "Message"],
Cell[63741, 1232, 535, 11, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64313, 1248, 4906, 139, 221, "Input"],
Cell[69222, 1389, 264, 4, 30, "Output"],
Cell[69489, 1395, 311, 6, 47, "Output"],
Cell[69803, 1403, 271, 4, 30, "Output"],
Cell[70077, 1409, 268, 4, 30, "Output"],
Cell[70348, 1415, 267, 4, 30, "Output"],
Cell[70618, 1421, 880, 27, 50, "Output"]
}, Open  ]],
Cell[71513, 1451, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[71632, 1456, 770, 21, 50, "Input"],
Cell[72405, 1479, 13186, 221, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85628, 1705, 7125, 172, 335, "Input"],
Cell[92756, 1879, 3381, 52, 154, "Message"],
Cell[96140, 1933, 6666, 165, 355, "Output"]
}, Open  ]],
Cell[102821, 2101, 92, 1, 30, "Input"]
}
]
*)

(* End of internal cache information *)
